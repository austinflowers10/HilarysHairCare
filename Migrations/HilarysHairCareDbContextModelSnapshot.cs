// <auto-generated />
using System;
using HilarysHairCare.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HilarysHairCare.Migrations
{
    [DbContext(typeof(HilarysHairCareDbContext))]
    partial class HilarysHairCareDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HilarysHairCare.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("StylistId")
                        .HasColumnType("integer");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StylistId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentTime = new DateTime(2023, 9, 27, 1, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 5,
                            StylistId = 1,
                            isActive = true
                        },
                        new
                        {
                            Id = 2,
                            AppointmentTime = new DateTime(2023, 9, 27, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 4,
                            StylistId = 2,
                            isActive = true
                        },
                        new
                        {
                            Id = 3,
                            AppointmentTime = new DateTime(2023, 9, 27, 3, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 3,
                            StylistId = 3,
                            isActive = true
                        },
                        new
                        {
                            Id = 4,
                            AppointmentTime = new DateTime(2023, 9, 27, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            StylistId = 4,
                            isActive = true
                        },
                        new
                        {
                            Id = 5,
                            AppointmentTime = new DateTime(2023, 9, 27, 5, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            StylistId = 5,
                            isActive = true
                        },
                        new
                        {
                            Id = 6,
                            AppointmentTime = new DateTime(2023, 9, 27, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            StylistId = 5,
                            isActive = false
                        });
                });

            modelBuilder.Entity("HilarysHairCare.Models.AppointmentService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("AppointmentServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 1,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 2,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 2,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 5,
                            AppointmentId = 3,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 6,
                            AppointmentId = 3,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 7,
                            AppointmentId = 3,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 8,
                            AppointmentId = 4,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 9,
                            AppointmentId = 4,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 10,
                            AppointmentId = 5,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 11,
                            AppointmentId = 6,
                            ServiceId = 3
                        });
                });

            modelBuilder.Entity("HilarysHairCare.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bradley Hasselhoff"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Matthew Miller"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Leslie Smith"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Betty Mathis"
                        },
                        new
                        {
                            Id = 5,
                            Name = "James Jameson"
                        });
                });

            modelBuilder.Entity("HilarysHairCare.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Haircut",
                            Price = 15.00m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hair Wash",
                            Price = 5.00m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hair Color",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Beard Trim",
                            Price = 10.00m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Beard Wash",
                            Price = 5.00m
                        });
                });

            modelBuilder.Entity("HilarysHairCare.Models.Stylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Stylists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sheila Robinson",
                            isActive = true
                        },
                        new
                        {
                            Id = 2,
                            Name = "Martha Johnson",
                            isActive = true
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lashonda Smith",
                            isActive = true
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mary McLemore",
                            isActive = false
                        },
                        new
                        {
                            Id = 5,
                            Name = "Billy Martin",
                            isActive = false
                        });
                });

            modelBuilder.Entity("HilarysHairCare.Models.Appointment", b =>
                {
                    b.HasOne("HilarysHairCare.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HilarysHairCare.Models.Stylist", "Stylist")
                        .WithMany("Appointments")
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Stylist");
                });

            modelBuilder.Entity("HilarysHairCare.Models.AppointmentService", b =>
                {
                    b.HasOne("HilarysHairCare.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HilarysHairCare.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HilarysHairCare.Models.Service", b =>
                {
                    b.HasOne("HilarysHairCare.Models.Appointment", null)
                        .WithMany("Services")
                        .HasForeignKey("AppointmentId");
                });

            modelBuilder.Entity("HilarysHairCare.Models.Appointment", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("HilarysHairCare.Models.Stylist", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
